Bridge (Object Structural)
- แยกโครงสร้าง (abstract) กับวิธีการทำจริงๆ (implement) ออกจากกัน แล้วเชื่อมด้วย Bridge

ex การวาดรูปหน้าจอ เรารู้ว่ามี 2 วิธี คือ Vector และ Raster แต่เรายังไม่รู้ว่าตอนทำจริงเราจะวาดวิธีใด
- RendererBridge ใช้ในการจัดการทำให้ยืดหยุ่นมากขึ้น

ข้อดี
- แยก Data และ algorithm ออกจากกัน
- คนละทีมเขียนได้
- คนเรียกใช้ เรียกใช้อย่างเดียว

ข้อเสีย
- เราต้องไว้ใจ method ที่คนอื่นเขียนมากไป


Command (Object Behavioural)
- ให้การทำงานมีการเก็บได้เป็น queue
- เก็บ Log ในการทำงาน เพื่อใช้ในการ undo

ข้อดี
- ทำซ้ำได้, undo ได้, 
- เช็คการเปลี่ยนแปลงเพื่อได้หน้าจอแจ้งผู้ใช้ว่ายังไม่ save งาน
- ในเกมนึกถึงการใช้สกิล

ข้อเสีย
- เชื่อตลอดว่าเรียก command แล้วเรียก Execute() ต้องมีอะไรบางอย่าง แต่ถ้าผิดพลาดคือ พังทันที